* stuff
#+name: gpg-stuff
#+begin_src emacs-lisp
  (defun helm-epa-select-keys (context prompt &optional names secret)
    (let* ((keys (epg-list-keys context names secret))
           (helm-data (--map
               (let ((primary-sub-key (car (epg-key-sub-key-list it)))
                     (primary-user-id (car (epg-key-user-id-list it))))
                 (cons
                  (format "%c %s %s"
                          (if (epg-sub-key-validity primary-sub-key)
                              (car (rassq (epg-sub-key-validity primary-sub-key)
                                          epg-key-validity-alist))
                            ? )
                          (epg-sub-key-id primary-sub-key)
                          (if primary-user-id
                              (if (stringp (epg-user-id-string primary-user-id))
                                  (epg-user-id-string primary-user-id)
                                (epg-decode-dn (epg-user-id-string primary-user-id)))
                            ""))
                  it))
               keys))
           (helm-source `((name . "Select keys")
                          (candidates . ,helm-data)
                          (action . (lambda (candidate)
                                      (helm-marked-candidates))))))
      (helm :sources helm-source)))


  (advice-add 'epa-select-keys :override #'helm-epa-select-keys)
#+end_src
