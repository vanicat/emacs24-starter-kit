* Some bindings for tags
#+name: bindings
#+begin_src emacs-lisp
  (eval-after-load 'notmuch-show
    '(define-key notmuch-show-mode-map "'" 'notmuch-show-apply-tag-macro))

  (define-key notmuch-search-mode-map "'" 'notmuch-search-apply-tag-macro)

  (setq notmuch-tag-macro-alist
    (list
     '("t" "+trash" "-inbox")
     '("r" "-unread")
     '("s" "+spam")
     '("f" "+flagged")
     (list* "a" notmuch-archive-tags)))

  (defun notmuch-show-apply-tag-macro (key)
    (interactive "k")
    (let ((macro (assoc key notmuch-tag-macro-alist)))
      (apply 'notmuch-show-tag-message (cdr macro))))

  (defun notmuch-search-apply-tag-macro (key)
    (interactive "ktag key: ")
    (let ((macro (assoc key notmuch-tag-macro-alist)))
      ;; to do: region
      (unless macro
        (user-error "unknown key"))
      (when macro
        (let ((tag (cdr macro)))
          (if (functionp tag)
              (setq macro (apply tag)))
          (if mark-active
              (notmuch-search-tag tag (region-beginning) (region-end))
            (notmuch-search-tag tag))))))
#+end_src
* Some binding for other things
#+name: update
#+begin_src emacs-lisp
  (defvar muchsync-default-server ""
    "default server to sync with")

  (defun muchsync (&optional server)
    "run mychsync

  if SERVER is not nil, use that as the server
  otherwise use the value of `muchsync-default-server'"
    (interactive)
    (shell-command (format
                    "muchsync %s &" muchsync-default-server) "*muchsync*" "*muchsync*")
    (with-current-buffer "*muchsync*"
      (view-mode)
      (setq view-exit-action #'bury-buffer)))

  (setq muchsync-default-server "suvrin.lot-of-stuff.info")

  (define-key notmuch-search-mode-map "g"
    'notmuch-poll-and-refresh-this-buffer)
  (define-key notmuch-hello-mode-map "g"
    'notmuch-poll-and-refresh-this-buffer)

  (define-key notmuch-search-mode-map "G"
    'muchsync)
  (define-key notmuch-hello-mode-map "G"
    'muchsync)

  (defun my-notmuch-browse-or-show ()
    (interactive)
    (if (or
         (thing-at-point 'url t)
         (and (thing-at-point 'filename t)
              (string-match-p "^[^/]*[[:alpha:]]\\{2,4\\}\\(/.*\\)$"
                              (thing-at-point 'filename t))))
        (call-interactively #'browse-url-at-point)
      (notmuch-show-toggle-message)))

  (define-key notmuch-show-mode-map (kbd "RET") 'my-notmuch-browse-or-show)
#+end_src
* Other config
#+name: prompt
#+begin_src emacs-lisp
  (setq notmuch-always-prompt-for-sender t)
#+end_src
