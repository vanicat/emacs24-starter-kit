* Sending mails
#+begin_src emacs-lisp
  (setq send-mail-function 'smtpmail-send-it)
  (setq message-send-mail-function 'smtpmail-send-it)
  (setq smtpmail-starttls-credentials '(("smtp.gmail.com" 587 nil nil)))
  (setq smtpmail-auth-credentials '(("smtp.gmail.com" 587 "remi.vanicat@gmail.com" nil)))
  (setq smtpmail-default-smtp-server "smtp.free.fr")
  ;; (setq smtpmail-smtp-server "smtp.gmail.com")
  ;; (setq smtpmail-smtp-service 587)
  ;;;(setq smtpmail-local-domain "free.fr")
#+end_src
* Choose server using from
#+name: choose server
#+begin_src emacs-lisp
  (defvar my-smtpmail-via-smtp-choose-server-alist
    '(("remi.vanicat@gmail.com" "smtp.gmail.com" 587)
      ("remi.vanicat@laposte.net" "smtp.laposte.net" 587))
    "An alist for using different smtp server whe using different from")

  (defun my-smtpmail-via-smtp-choose-server (oldfun recipient smtpmail-text-buffer
                                                &optional ask-for-password)
    (let* ((from (or (mail-envelope-from)
                     (let ((from (mail-fetch-field "from")))
                       (and from
                            (cadr (mail-extract-address-components from))))
                     (smtpmail-user-mail-address)))
           (conf (assoc-default (downcase from)
                                my-smtpmail-via-smtp-choose-server-alist
                                #'string-match-p))
           (smtpmail-smtp-server (if conf (car conf) smtpmail-smtp-server))
           (smtpmail-smtp-service (if conf (cadr conf) smtpmail-smtp-service)))
      (funcall oldfun recipient smtpmail-text-buffer ask-for-password)))

  (advice-add 'smtpmail-via-smtp :around #'my-smtpmail-via-smtp-choose-server)
#+end_src
